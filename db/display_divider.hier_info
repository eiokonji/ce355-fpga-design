|display_divider
clk1 => divider:divider1.clk
start1 => divider:divider1.start
dividend1[0] => divider:divider1.dividend[0]
dividend1[1] => divider:divider1.dividend[1]
dividend1[2] => divider:divider1.dividend[2]
dividend1[3] => divider:divider1.dividend[3]
dividend1[4] => divider:divider1.dividend[4]
dividend1[5] => divider:divider1.dividend[5]
dividend1[6] => divider:divider1.dividend[6]
dividend1[7] => divider:divider1.dividend[7]
divisor1[0] => divider:divider1.divisor[0]
divisor1[1] => divider:divider1.divisor[1]
divisor1[2] => divider:divider1.divisor[2]
divisor1[3] => divider:divider1.divisor[3]
quotient1[0] << leddcd:quot:0:quot_dcd.segments_out[0]
quotient1[1] << leddcd:quot:0:quot_dcd.segments_out[1]
quotient1[2] << leddcd:quot:0:quot_dcd.segments_out[2]
quotient1[3] << leddcd:quot:0:quot_dcd.segments_out[3]
quotient1[4] << leddcd:quot:0:quot_dcd.segments_out[4]
quotient1[5] << leddcd:quot:0:quot_dcd.segments_out[5]
quotient1[6] << leddcd:quot:0:quot_dcd.segments_out[6]
quotient1[7] << leddcd:quot:1:quot_dcd.segments_out[0]
quotient1[8] << leddcd:quot:1:quot_dcd.segments_out[1]
quotient1[9] << leddcd:quot:1:quot_dcd.segments_out[2]
quotient1[10] << leddcd:quot:1:quot_dcd.segments_out[3]
quotient1[11] << leddcd:quot:1:quot_dcd.segments_out[4]
quotient1[12] << leddcd:quot:1:quot_dcd.segments_out[5]
quotient1[13] << leddcd:quot:1:quot_dcd.segments_out[6]
remainder1[0] << leddcd:remain:0:rem_dcd.segments_out[0]
remainder1[1] << leddcd:remain:0:rem_dcd.segments_out[1]
remainder1[2] << leddcd:remain:0:rem_dcd.segments_out[2]
remainder1[3] << leddcd:remain:0:rem_dcd.segments_out[3]
remainder1[4] << leddcd:remain:0:rem_dcd.segments_out[4]
remainder1[5] << leddcd:remain:0:rem_dcd.segments_out[5]
remainder1[6] << leddcd:remain:0:rem_dcd.segments_out[6]
overflow1[0] << leddcd:ovr.segments_out[0]
overflow1[1] << leddcd:ovr.segments_out[1]
overflow1[2] << leddcd:ovr.segments_out[2]
overflow1[3] << leddcd:ovr.segments_out[3]
overflow1[4] << leddcd:ovr.segments_out[4]
overflow1[5] << leddcd:ovr.segments_out[5]
overflow1[6] << leddcd:ovr.segments_out[6]


|display_divider|divider:divider1
clk => ~NO_FANOUT~
start => overflow~reg0.CLK
start => remainder[0]~reg0.CLK
start => remainder[1]~reg0.CLK
start => remainder[2]~reg0.CLK
start => remainder[3]~reg0.CLK
start => quotient[0]~reg0.CLK
start => quotient[1]~reg0.CLK
start => quotient[2]~reg0.CLK
start => quotient[3]~reg0.CLK
start => quotient[4]~reg0.CLK
start => quotient[5]~reg0.CLK
start => quotient[6]~reg0.CLK
start => quotient[7]~reg0.CLK
dividend[0] => comparator:subtractor:7:lastslice:comp_last.DINL[0]
dividend[1] => comparator:subtractor:6:midslice:comp_mid.DINL[0]
dividend[2] => comparator:subtractor:5:midslice:comp_mid.DINL[0]
dividend[3] => comparator:subtractor:4:midslice:comp_mid.DINL[0]
dividend[4] => comparator:subtractor:3:midslice:comp_mid.DINL[0]
dividend[5] => comparator:subtractor:2:midslice:comp_mid.DINL[0]
dividend[6] => comparator:subtractor:1:midslice:comp_mid.DINL[0]
dividend[7] => comparator:subtractor:0:firstslice:comp_first.DINL[0]
divisor[0] => comparator:subtractor:0:firstslice:comp_first.DINR[0]
divisor[0] => comparator:subtractor:1:midslice:comp_mid.DINR[0]
divisor[0] => comparator:subtractor:2:midslice:comp_mid.DINR[0]
divisor[0] => comparator:subtractor:3:midslice:comp_mid.DINR[0]
divisor[0] => comparator:subtractor:4:midslice:comp_mid.DINR[0]
divisor[0] => comparator:subtractor:5:midslice:comp_mid.DINR[0]
divisor[0] => comparator:subtractor:6:midslice:comp_mid.DINR[0]
divisor[0] => comparator:subtractor:7:lastslice:comp_last.DINR[0]
divisor[0] => Equal0.IN3
divisor[1] => comparator:subtractor:0:firstslice:comp_first.DINR[1]
divisor[1] => comparator:subtractor:1:midslice:comp_mid.DINR[1]
divisor[1] => comparator:subtractor:2:midslice:comp_mid.DINR[1]
divisor[1] => comparator:subtractor:3:midslice:comp_mid.DINR[1]
divisor[1] => comparator:subtractor:4:midslice:comp_mid.DINR[1]
divisor[1] => comparator:subtractor:5:midslice:comp_mid.DINR[1]
divisor[1] => comparator:subtractor:6:midslice:comp_mid.DINR[1]
divisor[1] => comparator:subtractor:7:lastslice:comp_last.DINR[1]
divisor[1] => Equal0.IN2
divisor[2] => comparator:subtractor:0:firstslice:comp_first.DINR[2]
divisor[2] => comparator:subtractor:1:midslice:comp_mid.DINR[2]
divisor[2] => comparator:subtractor:2:midslice:comp_mid.DINR[2]
divisor[2] => comparator:subtractor:3:midslice:comp_mid.DINR[2]
divisor[2] => comparator:subtractor:4:midslice:comp_mid.DINR[2]
divisor[2] => comparator:subtractor:5:midslice:comp_mid.DINR[2]
divisor[2] => comparator:subtractor:6:midslice:comp_mid.DINR[2]
divisor[2] => comparator:subtractor:7:lastslice:comp_last.DINR[2]
divisor[2] => Equal0.IN1
divisor[3] => comparator:subtractor:0:firstslice:comp_first.DINR[3]
divisor[3] => comparator:subtractor:1:midslice:comp_mid.DINR[3]
divisor[3] => comparator:subtractor:2:midslice:comp_mid.DINR[3]
divisor[3] => comparator:subtractor:3:midslice:comp_mid.DINR[3]
divisor[3] => comparator:subtractor:4:midslice:comp_mid.DINR[3]
divisor[3] => comparator:subtractor:5:midslice:comp_mid.DINR[3]
divisor[3] => comparator:subtractor:6:midslice:comp_mid.DINR[3]
divisor[3] => comparator:subtractor:7:lastslice:comp_last.DINR[3]
divisor[3] => Equal0.IN0
quotient[0] <= quotient[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[1] <= quotient[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[2] <= quotient[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[3] <= quotient[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[4] <= quotient[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[5] <= quotient[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[6] <= quotient[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[7] <= quotient[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
remainder[0] <= remainder[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
remainder[1] <= remainder[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
remainder[2] <= remainder[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
remainder[3] <= remainder[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
overflow <= overflow~reg0.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|divider:divider1|comparator:\subtractor:0:firstslice:comp_first
DINL[0] => LessThan0.IN6
DINL[0] => Add0.IN10
DINL[0] => dout1.DATAA
DINL[1] => LessThan0.IN5
DINL[1] => Add0.IN9
DINL[1] => dout1.DATAA
DINL[2] => LessThan0.IN4
DINL[2] => Add0.IN8
DINL[2] => dout1.DATAA
DINL[3] => LessThan0.IN3
DINL[3] => Add0.IN7
DINL[3] => dout1.DATAA
DINL[4] => LessThan0.IN2
DINL[4] => Add0.IN6
DINR[0] => LessThan0.IN10
DINR[0] => Add0.IN5
DINR[1] => LessThan0.IN9
DINR[1] => Add0.IN4
DINR[2] => LessThan0.IN8
DINR[2] => Add0.IN3
DINR[3] => LessThan0.IN7
DINR[3] => Add0.IN2
DOUT[0] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
DOUT[1] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
DOUT[2] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
DOUT[3] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
isGreaterEq <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|divider:divider1|comparator:\subtractor:1:midslice:comp_mid
DINL[0] => LessThan0.IN6
DINL[0] => Add0.IN10
DINL[0] => dout1.DATAA
DINL[1] => LessThan0.IN5
DINL[1] => Add0.IN9
DINL[1] => dout1.DATAA
DINL[2] => LessThan0.IN4
DINL[2] => Add0.IN8
DINL[2] => dout1.DATAA
DINL[3] => LessThan0.IN3
DINL[3] => Add0.IN7
DINL[3] => dout1.DATAA
DINL[4] => LessThan0.IN2
DINL[4] => Add0.IN6
DINR[0] => LessThan0.IN10
DINR[0] => Add0.IN5
DINR[1] => LessThan0.IN9
DINR[1] => Add0.IN4
DINR[2] => LessThan0.IN8
DINR[2] => Add0.IN3
DINR[3] => LessThan0.IN7
DINR[3] => Add0.IN2
DOUT[0] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
DOUT[1] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
DOUT[2] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
DOUT[3] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
isGreaterEq <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|divider:divider1|comparator:\subtractor:2:midslice:comp_mid
DINL[0] => LessThan0.IN6
DINL[0] => Add0.IN10
DINL[0] => dout1.DATAA
DINL[1] => LessThan0.IN5
DINL[1] => Add0.IN9
DINL[1] => dout1.DATAA
DINL[2] => LessThan0.IN4
DINL[2] => Add0.IN8
DINL[2] => dout1.DATAA
DINL[3] => LessThan0.IN3
DINL[3] => Add0.IN7
DINL[3] => dout1.DATAA
DINL[4] => LessThan0.IN2
DINL[4] => Add0.IN6
DINR[0] => LessThan0.IN10
DINR[0] => Add0.IN5
DINR[1] => LessThan0.IN9
DINR[1] => Add0.IN4
DINR[2] => LessThan0.IN8
DINR[2] => Add0.IN3
DINR[3] => LessThan0.IN7
DINR[3] => Add0.IN2
DOUT[0] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
DOUT[1] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
DOUT[2] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
DOUT[3] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
isGreaterEq <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|divider:divider1|comparator:\subtractor:3:midslice:comp_mid
DINL[0] => LessThan0.IN6
DINL[0] => Add0.IN10
DINL[0] => dout1.DATAA
DINL[1] => LessThan0.IN5
DINL[1] => Add0.IN9
DINL[1] => dout1.DATAA
DINL[2] => LessThan0.IN4
DINL[2] => Add0.IN8
DINL[2] => dout1.DATAA
DINL[3] => LessThan0.IN3
DINL[3] => Add0.IN7
DINL[3] => dout1.DATAA
DINL[4] => LessThan0.IN2
DINL[4] => Add0.IN6
DINR[0] => LessThan0.IN10
DINR[0] => Add0.IN5
DINR[1] => LessThan0.IN9
DINR[1] => Add0.IN4
DINR[2] => LessThan0.IN8
DINR[2] => Add0.IN3
DINR[3] => LessThan0.IN7
DINR[3] => Add0.IN2
DOUT[0] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
DOUT[1] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
DOUT[2] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
DOUT[3] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
isGreaterEq <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|divider:divider1|comparator:\subtractor:4:midslice:comp_mid
DINL[0] => LessThan0.IN6
DINL[0] => Add0.IN10
DINL[0] => dout1.DATAA
DINL[1] => LessThan0.IN5
DINL[1] => Add0.IN9
DINL[1] => dout1.DATAA
DINL[2] => LessThan0.IN4
DINL[2] => Add0.IN8
DINL[2] => dout1.DATAA
DINL[3] => LessThan0.IN3
DINL[3] => Add0.IN7
DINL[3] => dout1.DATAA
DINL[4] => LessThan0.IN2
DINL[4] => Add0.IN6
DINR[0] => LessThan0.IN10
DINR[0] => Add0.IN5
DINR[1] => LessThan0.IN9
DINR[1] => Add0.IN4
DINR[2] => LessThan0.IN8
DINR[2] => Add0.IN3
DINR[3] => LessThan0.IN7
DINR[3] => Add0.IN2
DOUT[0] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
DOUT[1] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
DOUT[2] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
DOUT[3] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
isGreaterEq <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|divider:divider1|comparator:\subtractor:5:midslice:comp_mid
DINL[0] => LessThan0.IN6
DINL[0] => Add0.IN10
DINL[0] => dout1.DATAA
DINL[1] => LessThan0.IN5
DINL[1] => Add0.IN9
DINL[1] => dout1.DATAA
DINL[2] => LessThan0.IN4
DINL[2] => Add0.IN8
DINL[2] => dout1.DATAA
DINL[3] => LessThan0.IN3
DINL[3] => Add0.IN7
DINL[3] => dout1.DATAA
DINL[4] => LessThan0.IN2
DINL[4] => Add0.IN6
DINR[0] => LessThan0.IN10
DINR[0] => Add0.IN5
DINR[1] => LessThan0.IN9
DINR[1] => Add0.IN4
DINR[2] => LessThan0.IN8
DINR[2] => Add0.IN3
DINR[3] => LessThan0.IN7
DINR[3] => Add0.IN2
DOUT[0] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
DOUT[1] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
DOUT[2] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
DOUT[3] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
isGreaterEq <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|divider:divider1|comparator:\subtractor:6:midslice:comp_mid
DINL[0] => LessThan0.IN6
DINL[0] => Add0.IN10
DINL[0] => dout1.DATAA
DINL[1] => LessThan0.IN5
DINL[1] => Add0.IN9
DINL[1] => dout1.DATAA
DINL[2] => LessThan0.IN4
DINL[2] => Add0.IN8
DINL[2] => dout1.DATAA
DINL[3] => LessThan0.IN3
DINL[3] => Add0.IN7
DINL[3] => dout1.DATAA
DINL[4] => LessThan0.IN2
DINL[4] => Add0.IN6
DINR[0] => LessThan0.IN10
DINR[0] => Add0.IN5
DINR[1] => LessThan0.IN9
DINR[1] => Add0.IN4
DINR[2] => LessThan0.IN8
DINR[2] => Add0.IN3
DINR[3] => LessThan0.IN7
DINR[3] => Add0.IN2
DOUT[0] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
DOUT[1] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
DOUT[2] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
DOUT[3] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
isGreaterEq <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|divider:divider1|comparator:\subtractor:7:lastslice:comp_last
DINL[0] => LessThan0.IN6
DINL[0] => Add0.IN10
DINL[0] => dout1.DATAA
DINL[1] => LessThan0.IN5
DINL[1] => Add0.IN9
DINL[1] => dout1.DATAA
DINL[2] => LessThan0.IN4
DINL[2] => Add0.IN8
DINL[2] => dout1.DATAA
DINL[3] => LessThan0.IN3
DINL[3] => Add0.IN7
DINL[3] => dout1.DATAA
DINL[4] => LessThan0.IN2
DINL[4] => Add0.IN6
DINR[0] => LessThan0.IN10
DINR[0] => Add0.IN5
DINR[1] => LessThan0.IN9
DINR[1] => Add0.IN4
DINR[2] => LessThan0.IN8
DINR[2] => Add0.IN3
DINR[3] => LessThan0.IN7
DINR[3] => Add0.IN2
DOUT[0] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
DOUT[1] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
DOUT[2] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
DOUT[3] <= dout1.DB_MAX_OUTPUT_PORT_TYPE
isGreaterEq <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|leddcd:\quot:0:quot_dcd
data_in[0] => Equal0.IN0
data_in[0] => Equal1.IN3
data_in[0] => Equal2.IN1
data_in[0] => Equal3.IN3
data_in[0] => Equal4.IN1
data_in[0] => Equal5.IN3
data_in[0] => Equal6.IN2
data_in[0] => Equal7.IN3
data_in[0] => Equal8.IN1
data_in[0] => Equal9.IN3
data_in[0] => Equal10.IN2
data_in[0] => Equal11.IN3
data_in[0] => Equal12.IN2
data_in[0] => Equal13.IN3
data_in[0] => Equal14.IN3
data_in[1] => Equal0.IN3
data_in[1] => Equal1.IN0
data_in[1] => Equal2.IN0
data_in[1] => Equal3.IN2
data_in[1] => Equal4.IN3
data_in[1] => Equal5.IN1
data_in[1] => Equal6.IN1
data_in[1] => Equal7.IN2
data_in[1] => Equal8.IN3
data_in[1] => Equal9.IN1
data_in[1] => Equal10.IN1
data_in[1] => Equal11.IN2
data_in[1] => Equal12.IN3
data_in[1] => Equal13.IN2
data_in[1] => Equal14.IN2
data_in[2] => Equal0.IN2
data_in[2] => Equal1.IN2
data_in[2] => Equal2.IN3
data_in[2] => Equal3.IN0
data_in[2] => Equal4.IN0
data_in[2] => Equal5.IN0
data_in[2] => Equal6.IN0
data_in[2] => Equal7.IN1
data_in[2] => Equal8.IN2
data_in[2] => Equal9.IN2
data_in[2] => Equal10.IN3
data_in[2] => Equal11.IN1
data_in[2] => Equal12.IN1
data_in[2] => Equal13.IN1
data_in[2] => Equal14.IN1
data_in[3] => Equal0.IN1
data_in[3] => Equal1.IN1
data_in[3] => Equal2.IN2
data_in[3] => Equal3.IN1
data_in[3] => Equal4.IN2
data_in[3] => Equal5.IN2
data_in[3] => Equal6.IN3
data_in[3] => Equal7.IN0
data_in[3] => Equal8.IN0
data_in[3] => Equal9.IN0
data_in[3] => Equal10.IN0
data_in[3] => Equal11.IN0
data_in[3] => Equal12.IN0
data_in[3] => Equal13.IN0
data_in[3] => Equal14.IN0
segments_out[0] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|leddcd:\quot:1:quot_dcd
data_in[0] => Equal0.IN0
data_in[0] => Equal1.IN3
data_in[0] => Equal2.IN1
data_in[0] => Equal3.IN3
data_in[0] => Equal4.IN1
data_in[0] => Equal5.IN3
data_in[0] => Equal6.IN2
data_in[0] => Equal7.IN3
data_in[0] => Equal8.IN1
data_in[0] => Equal9.IN3
data_in[0] => Equal10.IN2
data_in[0] => Equal11.IN3
data_in[0] => Equal12.IN2
data_in[0] => Equal13.IN3
data_in[0] => Equal14.IN3
data_in[1] => Equal0.IN3
data_in[1] => Equal1.IN0
data_in[1] => Equal2.IN0
data_in[1] => Equal3.IN2
data_in[1] => Equal4.IN3
data_in[1] => Equal5.IN1
data_in[1] => Equal6.IN1
data_in[1] => Equal7.IN2
data_in[1] => Equal8.IN3
data_in[1] => Equal9.IN1
data_in[1] => Equal10.IN1
data_in[1] => Equal11.IN2
data_in[1] => Equal12.IN3
data_in[1] => Equal13.IN2
data_in[1] => Equal14.IN2
data_in[2] => Equal0.IN2
data_in[2] => Equal1.IN2
data_in[2] => Equal2.IN3
data_in[2] => Equal3.IN0
data_in[2] => Equal4.IN0
data_in[2] => Equal5.IN0
data_in[2] => Equal6.IN0
data_in[2] => Equal7.IN1
data_in[2] => Equal8.IN2
data_in[2] => Equal9.IN2
data_in[2] => Equal10.IN3
data_in[2] => Equal11.IN1
data_in[2] => Equal12.IN1
data_in[2] => Equal13.IN1
data_in[2] => Equal14.IN1
data_in[3] => Equal0.IN1
data_in[3] => Equal1.IN1
data_in[3] => Equal2.IN2
data_in[3] => Equal3.IN1
data_in[3] => Equal4.IN2
data_in[3] => Equal5.IN2
data_in[3] => Equal6.IN3
data_in[3] => Equal7.IN0
data_in[3] => Equal8.IN0
data_in[3] => Equal9.IN0
data_in[3] => Equal10.IN0
data_in[3] => Equal11.IN0
data_in[3] => Equal12.IN0
data_in[3] => Equal13.IN0
data_in[3] => Equal14.IN0
segments_out[0] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|leddcd:\remain:0:rem_dcd
data_in[0] => Equal0.IN0
data_in[0] => Equal1.IN3
data_in[0] => Equal2.IN1
data_in[0] => Equal3.IN3
data_in[0] => Equal4.IN1
data_in[0] => Equal5.IN3
data_in[0] => Equal6.IN2
data_in[0] => Equal7.IN3
data_in[0] => Equal8.IN1
data_in[0] => Equal9.IN3
data_in[0] => Equal10.IN2
data_in[0] => Equal11.IN3
data_in[0] => Equal12.IN2
data_in[0] => Equal13.IN3
data_in[0] => Equal14.IN3
data_in[1] => Equal0.IN3
data_in[1] => Equal1.IN0
data_in[1] => Equal2.IN0
data_in[1] => Equal3.IN2
data_in[1] => Equal4.IN3
data_in[1] => Equal5.IN1
data_in[1] => Equal6.IN1
data_in[1] => Equal7.IN2
data_in[1] => Equal8.IN3
data_in[1] => Equal9.IN1
data_in[1] => Equal10.IN1
data_in[1] => Equal11.IN2
data_in[1] => Equal12.IN3
data_in[1] => Equal13.IN2
data_in[1] => Equal14.IN2
data_in[2] => Equal0.IN2
data_in[2] => Equal1.IN2
data_in[2] => Equal2.IN3
data_in[2] => Equal3.IN0
data_in[2] => Equal4.IN0
data_in[2] => Equal5.IN0
data_in[2] => Equal6.IN0
data_in[2] => Equal7.IN1
data_in[2] => Equal8.IN2
data_in[2] => Equal9.IN2
data_in[2] => Equal10.IN3
data_in[2] => Equal11.IN1
data_in[2] => Equal12.IN1
data_in[2] => Equal13.IN1
data_in[2] => Equal14.IN1
data_in[3] => Equal0.IN1
data_in[3] => Equal1.IN1
data_in[3] => Equal2.IN2
data_in[3] => Equal3.IN1
data_in[3] => Equal4.IN2
data_in[3] => Equal5.IN2
data_in[3] => Equal6.IN3
data_in[3] => Equal7.IN0
data_in[3] => Equal8.IN0
data_in[3] => Equal9.IN0
data_in[3] => Equal10.IN0
data_in[3] => Equal11.IN0
data_in[3] => Equal12.IN0
data_in[3] => Equal13.IN0
data_in[3] => Equal14.IN0
segments_out[0] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|leddcd:ovr
data_in[0] => Equal0.IN0
data_in[0] => Equal1.IN3
data_in[0] => Equal2.IN1
data_in[0] => Equal3.IN3
data_in[0] => Equal4.IN1
data_in[0] => Equal5.IN3
data_in[0] => Equal6.IN2
data_in[0] => Equal7.IN3
data_in[0] => Equal8.IN1
data_in[0] => Equal9.IN3
data_in[0] => Equal10.IN2
data_in[0] => Equal11.IN3
data_in[0] => Equal12.IN2
data_in[0] => Equal13.IN3
data_in[0] => Equal14.IN3
data_in[1] => Equal0.IN3
data_in[1] => Equal1.IN0
data_in[1] => Equal2.IN0
data_in[1] => Equal3.IN2
data_in[1] => Equal4.IN3
data_in[1] => Equal5.IN1
data_in[1] => Equal6.IN1
data_in[1] => Equal7.IN2
data_in[1] => Equal8.IN3
data_in[1] => Equal9.IN1
data_in[1] => Equal10.IN1
data_in[1] => Equal11.IN2
data_in[1] => Equal12.IN3
data_in[1] => Equal13.IN2
data_in[1] => Equal14.IN2
data_in[2] => Equal0.IN2
data_in[2] => Equal1.IN2
data_in[2] => Equal2.IN3
data_in[2] => Equal3.IN0
data_in[2] => Equal4.IN0
data_in[2] => Equal5.IN0
data_in[2] => Equal6.IN0
data_in[2] => Equal7.IN1
data_in[2] => Equal8.IN2
data_in[2] => Equal9.IN2
data_in[2] => Equal10.IN3
data_in[2] => Equal11.IN1
data_in[2] => Equal12.IN1
data_in[2] => Equal13.IN1
data_in[2] => Equal14.IN1
data_in[3] => Equal0.IN1
data_in[3] => Equal1.IN1
data_in[3] => Equal2.IN2
data_in[3] => Equal3.IN1
data_in[3] => Equal4.IN2
data_in[3] => Equal5.IN2
data_in[3] => Equal6.IN3
data_in[3] => Equal7.IN0
data_in[3] => Equal8.IN0
data_in[3] => Equal9.IN0
data_in[3] => Equal10.IN0
data_in[3] => Equal11.IN0
data_in[3] => Equal12.IN0
data_in[3] => Equal13.IN0
data_in[3] => Equal14.IN0
segments_out[0] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE


